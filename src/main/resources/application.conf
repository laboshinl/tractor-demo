akka.cluster.seed-nodes = [
  "akka.tcp://ClusterSystem@127.0.0.1:2551"
]

//akka.actor.warn-about-java-serializer-usage = off
akka {
  loglevel = "ERROR"
}

tractor.block.size = 10  //MB

akka.remote.netty.tcp {
  hostname = "127.0.0.1"
  port = 2551
  bind-hostname = "0.0.0.0"
  bind-port = 2551
}

akka.actor {
  provider = "akka.cluster.ClusterActorRefProvider"
}

akka.actor.default-dispatcher {
  //  throughput = 100
 fork-join-executor {
//    parallelism-min = 30
//    parallelism-max = 30
//   parallelism-factor = 3
  }
}
//  //  executor = "thread-pool-executor"
//  //  # Configuration for the thread pool
//  //  thread-pool-executor {
//  //    # minimum number of threads to cap factor-based core number to
//  //    core-pool-size-min = 2
//  //    # No of core threads ... ceil(available processors * factor)
//  //    core-pool-size-factor = 1.0
//  //    # maximum number of threads to cap factor-based number to
//  //    core-pool-size-max = 64
//  //  }
//  //  # Throughput defines the maximum number of messages to be
//  //  # processed per actor before the thread jumps to the next actor.
//  //  # Set to 1 for as fair as possible.
//  //  throughput = 100
//}
akka.cluster {
  min-nr-of-members = 2
  failure-detector {
    threshold = 12.0
    min-std-deviation = 10 s
    heartbeat-interval = 30 s
    acceptable-heartbeat-pause = 30 s //30
  }
}


akka.remote {
  maximum-payload-bytes = 99000000 bytes
  netty.tcp {
    message-frame-size = 99000000b
    send-buffer-size = 99000000b
    receive-buffer-size = 99000000b
    maximum-frame-size = 99000000b
  }
  transport-failure-detector {
    acceptable-heartbeat-pause = 30 s
  }
  watch-failure-detector {
    acceptable-heartbeat-pause = 30 s
  }
}

akka.actor.serializers {
  java = "akka.serialization.JavaSerializer"
  kryo = "com.twitter.chill.akka.AkkaSerializer"
}
akka.actor.serialization-bindings {
  "ru.laboshinl.tractor.TractorTcpPacket" = kryo
  "ru.laboshinl.tractor.TractorTcpFlow" = kryo
  "ru.laboshinl.tractor.BidirectionalTcpFlow" = kryo
  "ru.laboshinl.tractor.BidirectionalFlows" = kryo
  "ru.laboshinl.tractor.FileBlock" = kryo
  "akka.dispatch.sysmsg.Supervise" = kryo
  "akka.dispatch.sysmsg.Watch" = kryo
  "akka.remote.RemoteScope" = kryo
  "akka.actor.Scope" = kryo
}
# Enable metrics extension in akka-cluster-metrics.
//akka.extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$" ]
akka.cluster.metrics.enabled = off

